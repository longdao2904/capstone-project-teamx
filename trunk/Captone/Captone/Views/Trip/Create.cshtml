@model Captone.Models.Trip

@{
    ViewBag.Title = "Thêm chuyến mới";
}


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Thông tin chuyến mới</legend>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.EstimateDepartureTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EstimateDepartureTime)
                @Html.ValidationMessageFor(model => model.EstimateDepartureTime)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.EstimateArrivalTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EstimateArrivalTime)
                @Html.ValidationMessageFor(model => model.EstimateArrivalTime)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.RealDepartureTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RealDepartureTime)
                @Html.ValidationMessageFor(model => model.RealDepartureTime)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.RealArrivalTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RealArrivalTime)
                @Html.ValidationMessageFor(model => model.RealArrivalTime)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.AvailableVolume)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AvailableVolume)
                @Html.ValidationMessageFor(model => model.AvailableVolume)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.Date)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.RouteID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("RouteID", String.Empty)
                @Html.ValidationMessageFor(model => model.RouteID)
            </div>
        </div>

        <div class="form-group has-error">
            <div class="editor-label">
                @Html.LabelFor(model => model.CoachID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("CoachID", String.Empty)
                @Html.ValidationMessageFor(model => model.CoachID)
            </div>
        </div>
        <br />
        <p>
            <input type="submit" value="Tạo mới" class="btn btn-primary" />
            <input type="button" value="Quay lại danh sách" class="btn btn-info" onclick="window.location.href = '/Trip/Index'" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    function changeClass() {
        $("input").addClass("form-control");
        $("select").addClass("form-control");
    }

    window.onload = changeClass();
</script>
