@{
    ViewBag.Title = "Yêu cầu chuyển phát";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model IEnumerable<Captone.Models.ManageFee>
@using Captone.Models
@{
    string username = Session["USERNAME"].ToString();
    
}
<<<<<<< .mine

<div class="request-container">

    <div class="request-header">
        <p>Gửi yêu cầu</p>
    </div>
=======
<div>
>>>>>>> .r150
    <div class="request-main">
        <form method="POST" action="/Home/PostRequest">
            <input type="text" value="@DateTime.Now" name="DateRequest" style="display: none"/>
            <div class="input-distance">
                <h4>Tên Người Gửi</h4>
                <input type="text" name="Username" class="request-input-value" value="@username"/><br />
            </div>
            <div class="input-distance">
                <h4>Địa Chỉ Người Gửi</h4>
                <input type="text" name="SenderAddress" class="request-input-value" id="AddressOfSender" onchange="SuggestAddress()" />
                <input type="text" id="locaAddress" style="display: none" />
            </div>
            <div class="input-distance">
                <h4>Số Điện Thoại Người Gửi</h4>
                <input type="text" name="SenderPhone" class="request-input-value" />
            </div>
            <div class="bub-container">
                <input type="checkbox" id="bulb" class="light" onclick="showPopUp()" />

                <label for="bulb"></label>
            </div>

            <div class="input-distance">
                <h4>Tên Người Nhận</h4>
                <input type="text" name="ReceiverName" class="request-input-value" /><br />
            </div>
            <div class="input-distance">
                <h4>Địa Chỉ Người Nhận</h4>
                <input type="text" name="ReceiverAddress" class="request-input-value" id="AddressOfReceiver" onchange="ToLocationChange()" />
                <input type="text" id="ToAddress" style="display: none" />
            </div>
            <div class="input-distance">
                <h4>Số Điện Thoại Người Nhận</h4>
                <input type="text" name="ReceiverPhone" class="request-input-value" id="" />
            </div>
            <div class="bub-container2">
                <input type="checkbox" id="bulb2" class="light" onclick="showGoogleMap()" />

                <label for="bulb2"></label>
            </div>
             <div class="bub-container3">
                <input type="checkbox" id="bulb3" class="light" onclick="showLocation()" />

                <label for="bulb3"></label>
            </div>
            <div class="input-distance">
                <h4>Khối Lượng Ước Tính (kg)</h4>
                <select class="request-input-value" style="height: 32px; width: 305px; text-indent: 115px;" id="Weigh">
                    <option value="0"></option>
                    @foreach (var item in Model)
                    {   
                        <option value="@item.FeeID">@item.MinWeight - @item.MaxWeight</option>
                        
                    }
                </select>
                <input type="text" id="FeeID" name="FeeID" value="" style="display: none"/>
                <input type="text" id="EstimateWeight" name="EstimateWeight" value="" style="display: none"/>
                <input type="text" id="EstimateVolume" name="EstimateVolume" value="" style="display: none"/>
                <input type="text" id="FromLocation" name="FromLocation" value="" style="display: none"/>
                <input type="text" id="ToLocation" name="ToLocation" value="" style="display: none"/>
            </div>
            <br/>
            <div class="input-distance">
                <h4>Thể Tính Ước Tính</h4>
                <select class="request-input-value" name="" style="height: 32px; width: 305px; text-indent: 115px;" id="Volume">
                    <option></option>
                    @foreach (var item in Model)
                    {
                        <option value="@item.FeeID">@item.MinVolume - @item.MaxVolume </option>
                         
                    }
                </select>
            </div>
            <div>
                <input type="button" class="button-submit" id="buttonSuggest" style="margin-left: 200px; margin-top: 12px;" value="Xem giá ước tính" onclick="showPop()" disabled="disabled" />

                <div class="pop" id="SuggestFee">
                </div>
            </div>
            <div class="input-distance">
                <h4>Phương thức thanh toán</h4>
                <select class="request-input-value" name="TypeOfPayment" style="height: 32px; width: 305px; text-indent: 115px;" id="">
                    <option></option>
                    <option value="">Thanh toán trực tiếp</option>
                    <option value="">Thanh toán online</option>
                </select>
            </div>
            <div>
                <button type="submit" class="button-submit">Hoàn Tất</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
  
    function feeChange() {
        var e = document.getElementById("Weigh");
        var v = document.getElementById("Volume");
        var strUser = e.options[e.selectedIndex].value;
        var textWeigh = e.options[e.selectedIndex].text;
        var textVolume = v.options[e.selectedIndex].text;
        document.getElementById("EstimateWeight").value = textWeigh;
        document.getElementById("EstimateVolume").value = textVolume;
        document.getElementById("FeeID").value = strUser;
    }

    function showPopUp() {
        var bulb = document.getElementById("bulb").checked;
        if (bulb) {
            //when bulb turn on
            GoogleMaker();
            checkStation();
        } else {
            document.getElementById("hide").innerHTML = "";
        }

    }
    function ToLocationChange() {
        SuggestToLocation();
        CalculateGoogleMap();
    }
    function showGoogleMap() {
        var bulb = document.getElementById("bulb2").checked;
        if (bulb) {
            showMap();
        } else {
            document.getElementById("hide").innerHTML = "";
        }

    }
    function showLocation() {
        var bulb = document.getElementById("bulb3").checked;
        if (bulb) {
            MakerLocation();
            ToLocation();
        } else {
            document.getElementById("hide").innerHTML = "";
        }

    }
    function SuggestAddress() {

        var address = document.getElementById("AddressOfSender").value;
        if (address != null) {
            StationMaker();
            $('.bub-container').show();

        } if (address == "") {
              $('.bub-container').hide();
              document.getElementById("bulb").checked = false;

          }
    }

    function SuggestToLocation() {
        var address = document.getElementById("AddressOfReceiver").value;
        if (address != null) {
            ToLocationMaker();
            $('.bub-container3').show();

        } if (address == "") {
            $('.bub-container3').hide();
            document.getElementById("bulb3").checked = false;

        }
  
    }
    function CalculateGoogleMap() {
        var address = document.getElementById("AddressOfReceiver").value;
        if (address != null) {

            $('.bub-container2').show();
        } if (address == "") {
              $('.bub-container2').hide();
              document.getElementById("bulb2").checked = false;

          }
    }
    $(function () {
        SetWeigh();
    });
    function showMap() {
        var sender = document.getElementById('AddressOfSender').value;
        var receiver = document.getElementById('AddressOfReceiver').value;
        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer();
        $("#description").hide();
        $("#shortest").hide();
        var myOptions = {
            zoom: 7,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        var map = new google.maps.Map(document.getElementById("map"), myOptions);
        directionsDisplay.setMap(map);

        var request = {
            origin: sender + '',
            destination: receiver + '',
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };

        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {

                // Display the distance:
                document.getElementById('distance').innerHTML = "Khoảng cách: " +
                    Math.round((response.routes[0].legs[0].distance.value) * 1.609344 / 1000) + " km";

                // Display the duration:
                document.getElementById('duration').innerHTML = "Thời gian: " +
                    Math.round((response.routes[0].legs[0].duration.value) / 3600) + " giờ";
                directionsDisplay.setDirections(response);
            }
        });
    }
    function showPop() {
        $('.pop').show();
    }
    function hid() {
        $('.pop').hide();
    }
    function SetWeigh() {
        var weigh = document.getElementById("Weigh");
        weigh.onchange = function () {
            SetVolume(this);
            CalculateFee();
            feeChange();
            if (weigh.value == "") {
                document.getElementById("buttonSuggest").disabled = true;
            }
            else {
                document.getElementById("buttonSuggest").disabled = false;
            }

        };
    }
    function SetVolume(weigh) {
        var volume = document.getElementById("Volume");
        volume.value = weigh.value;
    }

    function CalculateFee() {
        var select = document.getElementById("Weigh");
        var options = select.options[select.selectedIndex].text;
        var select1 = document.getElementById("Volume");
        var options1 = select1.options[select1.selectedIndex].text;
        var weigh = options.split(" - ");
        var volume = options1.split(" - ");
        $.ajax({
            url: "/Home/CalculateFee",
            type: "Post",
            data: { minWeight: weigh[0], maxWeight: weigh[1] },
            success: function (result) {
                var fee = result.split(" = ");
                $("#SuggestFee").html("Giá ước tính: " + fee[1].substring(0, fee[1].length - 1) + "VND" + "  " + "<a href='#' onclick='hid()'>Đóng</a>");
            }
        });
    }


    function checkStation() {
        var index = 0;

        var dis = [];
        var str = document.getElementById('AddressOfSender').value;
        var sender = str.split(",");
        $.ajax({
            url: "/Home/GetAddressStation",
            contentType: "application/json",
            dataType: "json",
            data: { stationLocation: sender[sender.length - 1] },
            success: function (result) {
                var directionsService = new google.maps.DirectionsService();
                var directionsDisplay = new google.maps.DirectionsRenderer();
                for (var i in result) {
                    var request = {
                        origin: sender + '',
                        destination: result[i].StationLocation + '',
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };
                
                    (function (record) {
                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                // Display the distance:
                                if (index < result.length) {
                                    for (var m = 0; m < response.routes[0].legs.length; m++) {
                                        var d = result[index].StationID + ". "+ result[index].StationName + " : " + Math.round((response.routes[0].legs[m].distance.value) * 1.609344 / 1000) + " km" + " : " + Math.round((response.routes[0].legs[m].duration.value) / 3600) + " giờ";
                                        index++;
                                        dis.push(d);
                                    }
                                    directionsDisplay.setDirections(response);
                                    if (record == result.length - 1) {
                                        ShortestDistance(dis);
                                    }
                                }
                            }
                        });
                    })(i);
                }
            }
        });
    }
    function ShortestDistance(dis) {
        var first = dis[0];
        var test = first.split(":");
        var location = test[test.length - 1].split("km")[0];
        var index = 0;
        for (var i = 1; i < dis.length; i++) {
            var station = dis[i].split(":");
            var stationLast = station[station.length - 1].split("km")[0];
            if (parseInt(stationLast, 10) < parseInt(location, 10)) {
                first = dis[i];
                index = i;
            }
        }
        //code here
        $("#shortest").show();
        document.getElementById('shortest').innerHTML = "Trạm gần với vị trí của bạn nhất: <br/>" + first;
        var id = first.split(".")[0];
        document.getElementById("FromLocation").value = id;
        
    }
    function ToLocation() {
        var index = 0;
        var dis = [];
        var str = document.getElementById('AddressOfReceiver').value;
        var sender = str.split(",");
        $.ajax({
            url: "/Home/GetAddressStation",
            contentType: "application/json",
            dataType: "json",
            data: { stationLocation: sender[sender.length - 1] },
            success: function (result) {
                var directionsService = new google.maps.DirectionsService();
                var directionsDisplay = new google.maps.DirectionsRenderer();
                
                for (var i in result) {
                    var request = {
                        origin: sender + '',
                        destination: result[i].StationLocation + '',
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };

                    (function (record) {
                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                // Display the distance:
                                if (index < result.length) {
                                    for (var m = 0; m < response.routes[0].legs.length; m++) {
                                        var d = result[index].StationID + " . " + result[index].StationName + " : " + Math.round((response.routes[0].legs[m].distance.value) * 1.609344 / 1000) + " km";
                                        index++;
                                        dis.push(d);
                                    }
                                    directionsDisplay.setDirections(response);
                                    if (record == result.length - 1) {
                                        ShortestToLocation(dis);
                                    }
                                }
                            }
                        });
                    })(i);
                }
            }
        });
    }
    function ShortestToLocation(dis) {
        var first = dis[0];
        var test = first.split(":");
        var location = test[test.length - 1].split("km")[0];
        var index = 0;
        for (var i = 1; i < dis.length; i++) {
            var station = dis[i].split(":");
            var stationLast = station[station.length - 1].split("km")[0];
            if (parseInt(stationLast, 10) < parseInt(location, 10)) {
                first = dis[i];
                index = i;
            }
        }
        //code here
        $("#shortest").show();
        document.getElementById('shortest').innerHTML = "Trạm gần với vị trí của bạn nhất: <br/>" + first;
        var id = first.split(".")[0];
        document.getElementById("ToLocation").value = id;
    }
    function StationMaker() {
        var address = document.getElementById("AddressOfSender").value;
        $.ajax({
            url: "http://maps.googleapis.com/maps/api/geocode/json?address=" + address + "&sensor=false",
            type: "POST",
            success: function (res) {
                document.getElementById("locaAddress").value = res.results[0].geometry.location.lat + ', ' + res.results[0].geometry.location.lng;
            }
        });
    }
    function ToLocationMaker() {
        var address = document.getElementById("AddressOfReceiver").value;
        $.ajax({
            url: "http://maps.googleapis.com/maps/api/geocode/json?address=" + address + "&sensor=false",
            type: "POST",
            success: function (res) {
                document.getElementById("ToAddress").value = res.results[0].geometry.location.lat + ', ' + res.results[0].geometry.location.lng;
            }
        });
    }
    function GoogleMaker() {
        var str = document.getElementById('AddressOfSender').value;
        var sender = str.split(",");
        var val = document.getElementById("locaAddress").value;
        var commaPos = val.indexOf(',');
        var coordinatesLat = parseFloat(val.substring(0, commaPos));
        var coordinatesLong = parseFloat(val.substring(commaPos + 1, val.length));
        $.ajax({
            url: "/Home/GetAddressStation",
            contentType: "application/json",
            dataType: "json",
            data: { stationLocation: sender[sender.length - 1] },
            success: function (result) {

                $("#description").html("<b>Vị trí các trạm: </b>");
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 10,
                    center: new google.maps.LatLng(coordinatesLat, coordinatesLong),
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });

                var current = new google.maps.Marker({
                    position: new google.maps.LatLng(coordinatesLat, coordinatesLong),
                    map: map,
                    animation: google.maps.Animation.BOUNCE
                });
                var infowindow = new google.maps.InfoWindow();
                var marker, i;
                for (i in result) {
                    var images = '@Url.Content("~/Content/Images/station.png")';
                    var re = result[i].Coordinate.indexOf(',');
                    var Lat = parseFloat(result[i].Coordinate.substring(0, re));
                    var Long = parseFloat(result[i].Coordinate.substring(re + 1, result[i].Coordinate.length));
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(Lat, Long),
                        map: map,
                        animation: google.maps.Animation.DROP,
                        icon: images
                    });

                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(result[i].StationID + " : " + result[i].StationName + ' : ' + result[i].StationLocation);
                            infowindow.open(map, marker);
                        };
                    })(marker, i));
                }
            }
        });
    }
    function MakerLocation() {
        var str = document.getElementById('AddressOfReceiver').value;
        var sender = str.split(",");
        var val = document.getElementById("ToAddress").value;
        var commaPos = val.indexOf(',');
        var coordinatesLat = parseFloat(val.substring(0, commaPos));
        var coordinatesLong = parseFloat(val.substring(commaPos + 1, val.length));
        $.ajax({
            url: "/Home/GetAddressStation",
            contentType: "application/json",
            dataType: "json",
            data: { stationLocation: sender[sender.length - 1] },
            success: function (result) {
                $("#description").html("<b>Vị trí các trạm: </b>");
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 10,
                    center: new google.maps.LatLng(coordinatesLat, coordinatesLong),
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });

                var current = new google.maps.Marker({
                    position: new google.maps.LatLng(coordinatesLat, coordinatesLong),
                    map: map,
                    animation: google.maps.Animation.BOUNCE
                });
                var infowindow = new google.maps.InfoWindow();
                var marker, i;
                for (i in result) {
                    var images = '@Url.Content("~/Content/Images/station.png")';
                    var re = result[i].Coordinate.indexOf(',');
                    var Lat = parseFloat(result[i].Coordinate.substring(0, re));
                    var Long = parseFloat(result[i].Coordinate.substring(re + 1, result[i].Coordinate.length));
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(Lat, Long),
                        map: map,
                        animation: google.maps.Animation.DROP,
                        icon: images
                    });

                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(result[i].StationID + " : " + result[i].StationName + ' : ' + result[i].StationLocation);
                            infowindow.open(map, marker);
                        };
                    })(marker, i));
                }
            }
        });
    }
</script>
