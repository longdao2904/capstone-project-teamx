@model Captone.Models.Route

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Route</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.RouteName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RouteName)
            @Html.ValidationMessageFor(model => model.RouteName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartPoint, "Station1")
        </div>
        <div class="editor-field">
            @Html.DropDownList("StartPoint", String.Empty)
            @Html.ValidationMessageFor(model => model.StartPoint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndPoint, "Station")
        </div>
        <div class="editor-field">
            @Html.DropDownList("EndPoint", String.Empty)
            @Html.ValidationMessageFor(model => model.EndPoint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AvgRateLevel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AvgRateLevel)
            @Html.ValidationMessageFor(model => model.AvgRateLevel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Duration)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Distance)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Distance)
            @Html.ValidationMessageFor(model => model.Distance)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    function changeClass() {
        $("input").addClass("form-control");
        $("select").addClass("form-control");
    }

    window.onload = changeClass();
</script>